{"version":3,"file":"static/js/926.594b57f3.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-utils/dist/es/noop.mjs"],"sourcesContent":["import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return focusableElements.has(element.tagName) || element.tabIndex !== -1;\n}\n\nexport { isElementKeyboardAccessible };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (onPressEnd) {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element)) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from 'motion-dom';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from 'motion-utils';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from 'motion-utils';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from 'motion-utils';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.15.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.15.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const noop = (any) => any;\n\nexport { noop };\n"],"names":["underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","length","transformProps","has","startsWith","Math","sqrt","instantAnimationState","isNotNull","value","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","undefined","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","i","abs","binarySubdivide","backOut","backIn","reverseEasing","backInOut","mirrorEasing","anticipate","p","pow","isGenerator","isAnimatable","name","Array","isArray","complex","test","canAnimate","velocity","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","current","hasKeyframesChanged","BaseAnimation","constructor","autoplay","delay","repeatDelay","options","this","isStopped","hasAttemptedResolve","createdAt","time","now","updateFinishedPromise","calcStartTime","resolvedAt","resolved","_resolved","flushKeyframeResolvers","onKeyframesResolved","onComplete","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","generateLinearEasing","easing","resolution","arguments","points","numPoints","max","round","progress","substring","calcGeneratorVelocity","resolveValue","prevT","velocityPerSecond","springDefaults","mass","bounce","visualDuration","granular","default","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","maxGeneratorDuration","calcGeneratorDuration","generator","state","next","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","key","spring","optionsOrVisualDuration","origin","target","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","circIn","circInOut","circOut","easingDefinitionToFunction","definition","invariant","x1","y1","x2","y2","hueToRgb","q","mixImmediate","mixLinearColor","from","to","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixNumber","transform","invisibleValues","Set","mixNumber$1","getMixer","isCSSVariableToken","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","template","createTransformer","originStats","analyseComplexValue","targetStats","indexes","var","number","values","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","push","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","frameData","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","super","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","cancel","teardown","onStop","motionValue","element","KeyframeResolver$1","KeyframeResolver","onResolved","scheduleResolve","Object","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","acceleratedValues","memo","callback","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","fill","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","hasOwnProperty","call","Element","prototype","unsupportedEasingFunctions","AcceleratedAnimation","DOMKeyframesResolver","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","set","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","getProps","supportsScrollTimeline","window","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","fallback","subscriptions","forEach","methodName","controls","animateMotionValue","transition","isHandoff","valueTransition","getValueTransition","getVelocity","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","get","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","visualElement","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","getValue","latestValues","valueTarget","MotionHandoffAnimation","appearId","getOptimisedAppearId","addValueToWillChange","shouldReduceMotion","setTarget","animateVariant","variant","resolveVariant","presenceContext","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","optimizedAppearDataAttribute","camelToDash","props","isKeyframesTarget","acos","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","queue","add","delete","process","clear","createRenderStep","read","resolveKeyframes","preRender","render","postRender","processBatch","useManualTiming","performance","keepAlive","immediate","frameSteps","requestAnimationFrame","clearTime","queueMicrotask","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","_target","isAnimationControls","shallowCompare","prev","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","y","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isPrimaryPointer","button","isPrimary","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","focusableElements","isNodeOrChild","parentElement","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","extractEventInfo","point","pageX","pageY","addDomEvent","eventName","handler","addPointerEvent","addPointerInfo","distance","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","source","originPoint","scale","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","_ref2","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","depth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","isMotionValue","isCustomValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","toLowerCase","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","MotionConfigContext","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","transformPropOrder","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolveVariantFromProps","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","isCSSVariableName","valueAsType","numberValueTypes","transformString","transformIsDefault","valueIsDefault","trim","buildTransform","originZ","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","width","height","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","dimensionValueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","willChange","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","jump","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","isNumericalString","isZeroValueString","testValueType","getAnimatableNone","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","getPropertyValue","SVGVisualElement","getAttribute","motion","createDomVisualElement","splitCSSVariableRegex","getVariableValue","token","match","exec","token1","token2","parseCSSVariable","trimmed","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","positionalKeys","originType","findDimensionValueType","targetType","isNumOrPxType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureKeyframe","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","str","replace","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","split","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","degrees","vw","vh","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","scaleZ","skew","translateZ","perspective","progressPercentage","int","zIndex","fillOpacity","strokeOpacity","numOctaves","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","getValueState","setMotionValue","resolveFinalValueInKeyframes","item","combineFunctions","transformers","toFromDifference","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","rgbUnit","clampRgbUnit","singleColorRegex","testProp","isNullish","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","parsedValue","parseComplexValue","numSections","convertNumbersToZero","parsed","transformer","createUnitType","endsWith","any"],"sourceRoot":""}